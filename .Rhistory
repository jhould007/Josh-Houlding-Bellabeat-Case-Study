group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = reorder(ActivityDate, num_users))) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (avg_users_per_day/31)*100
print(overall_percent)
# Includes graph of # of users who wore Fitbits on each day, and calculation of avg % of users
# who wore their Fitbits on any given day.
library(dplyr)
library(ggplot2)
# 31 total days, 33 users
# Filter out rows with step_counts less than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = reorder(ActivityDate, num_users))) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (avg_users_per_day/31)*100
# Findings: On average, 89.8% of users were wearing their Fitbit device on any given day.
# This means that people not wearing them during the day isn't a problem.
# Analysis of sleep data
library(dplyr)
# Find how many users out of 33 recorded their sleep at least once
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
print(num_sleep_users)
# Findings: 24/33 users recorded sleep at least once
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(TotalSleepRecords))
View(total_sleep_records_per_id)
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 15/33 users recorded more than
10 sleep sessions.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Findings: Only 24/33 users recorded sleep, and of those, 9/24 recorded less than 10 sleep
# records during the 31-day period.
# Analysis of sleep data
library(dplyr)
# Find how many users out of 33 recorded their sleep at least once
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
print(num_sleep_users)
# Findings: 24/33 users recorded sleep at least once
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(TotalSleepRecords))
View(total_sleep_records_per_id)
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 15/33 users recorded more than
10 sleep sessions.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Findings: Only 24/33 users recorded sleep, and of those, 9/24 recorded less than 10 sleep
# records during the 31-day period.
# Analysis of sleep data
library(dplyr)
# Find how many users out of 33 recorded their sleep at least once
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
print(num_sleep_users)
# Findings: 24/33 users recorded sleep at least once
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(TotalSleepRecords))
View(total_sleep_records_per_id)
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 15/33 users recorded more than
10 sleep sessions.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Findings: Only 24/33 users recorded sleep, and of those, 9/24 recorded less than 10 sleep
# records during the 31-day period.
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
# Findings: 61% of weighs are done manually.
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(df$ID)
View(weightLogInfo)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(id_counts)
View(weigh_id_counts)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(id_counts)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weight_id_counts)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts_df <- as.data.frame(weight_id_counts)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
View(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Id, weigh_id_counts))) +
geom_bar(mapping=aes(y=weigh_id_counts), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 5, 5, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 8, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, weigh_id_counts))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
View(total_sleep_records_per_id)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=Id)) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
dailyActivity <- read_csv("dailyActivity_merged.csv")
kable(head(dailyActivity), caption = "dailyActivity_merged.csv.")
sleepDay <- read_csv("sleepDay_merged.csv")
kable(head(sleepDay), caption = "sleepDay_merged.csv.")
weightLogInfo <- read_csv("weightLogInfo_merged.csv")
kable(head(weightLogInfo), caption = "weightLogInfo_merged.csv.")
dailyActivity <- na.omit(dailyActivity)
sleepDay <- na.omit(sleepDay)
weightLogInfo <- na.omit(weightLogInfo)
dailyActivity <- distinct(dailyActivity)
sleepDay <- distinct(sleepDay)
weightLogInfo <- distinct(weightLogInfo)
dailyActivity$Id <- as.character(dailyActivity$Id)
sleepDay$Id <- as.character(sleepDay$Id)
weightLogInfo$Id <- as.character(weightLogInfo$Id)
sleepDay$SleepDay <- substr(sleepDay$SleepDay, start=1, stop=9)
library(dplyr)
library(ggplot2)
# Filter out rows with 0 steps
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (avg_users_per_day/31)*100
print(overall_percent)
# Create the bar plot
ggplot(step_counts_by_date, aes(x = reorder(ActivityDate, num_users))) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Analysis of sleep data
library(dplyr)
# Find how many users out of 33 recorded their sleep at least once
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
print(num_sleep_users)
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(TotalSleepRecords))
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 15/33 users recorded more than
10 sleep sessions.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
View(weigh_id_counts)
View(weightLogInfo)
View(weightLogInfo)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
dailyActivity <- read_csv("dailyActivity_merged.csv")
kable(head(dailyActivity), caption = "dailyActivity_merged.csv.")
sleepDay <- read_csv("sleepDay_merged.csv")
kable(head(sleepDay), caption = "sleepDay_merged.csv.")
weightLogInfo <- read_csv("weightLogInfo_merged.csv")
kable(head(weightLogInfo), caption = "weightLogInfo_merged.csv.")
dailyActivity <- na.omit(dailyActivity)
sleepDay <- na.omit(sleepDay)
weightLogInfo <- na.omit(weightLogInfo)
dailyActivity <- distinct(dailyActivity)
sleepDay <- distinct(sleepDay)
weightLogInfo <- distinct(weightLogInfo)
dailyActivity$Id <- as.character(dailyActivity$Id)
sleepDay$Id <- as.character(sleepDay$Id)
weightLogInfo$Id <- as.character(weightLogInfo$Id)
sleepDay$SleepDay <- substr(sleepDay$SleepDay, start=1, stop=9)
library(dplyr)
library(ggplot2)
# Filter out rows with 0 steps
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (avg_users_per_day/31)*100
print(overall_percent)
# Create the bar plot
ggplot(step_counts_by_date, aes(x = reorder(ActivityDate, num_users))) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Analysis of sleep data
library(dplyr)
# Find how many users out of 33 recorded their sleep at least once
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
print(num_sleep_users)
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(TotalSleepRecords))
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 15/33 users recorded more than
10 sleep sessions.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(weightLogInfo$Id)
weigh_id_counts <- as.data.frame(weigh_id_counts)
# Create the bar plot
ggplot(weigh_id_counts, aes(x=reorder(Var1, Freq))) +
geom_bar(mapping=aes(y=Freq), stat = "identity", fill = "green", alpha = 0.7) +
annotate(geom="label", 3, 15, label="Only 8/33 users recorded their weight.", fill="white") +
labs(title = "Number of weight recordings per user",
x = "User ID",
y = "Number of Weight Records") +
theme(axis.text.x = element_text(angle = 90))
weightLogInfo <- read_csv("weightLogInfo_merged.csv")
library(tidyverse)
library(dplyr)
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
print(percent_manual_weighs)
