arrange(-n)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(id_counts, TotalSteps == 0) %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(id_counts, TotalSteps == 0) %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
install("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id) %>%
arrange(-n)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id)
source("G:/My Drive/Google Data Analytics Professional Certificate/8  Capstone  Complete a Case Study/Rstudio Capstone Analysis/analyzingAndVisualizing.R", echo=TRUE)
# See how many days each user wore their Fitbit
# 31 total days, 33 users
Ids <- unique(dailyActivity$Id) %>%
id_counts <- dailyActivity %>%
filter(Id %in% Ids) %>%
count(Id)
library(dplyr)
library(ggplot2)
# Filter out rows with step_counts greater than 0
filtered_data <- exercise_data %>%
filter(step_counts > 0)
library(dplyr)
library(ggplot2)
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate, y = Id)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme_minimal()
library(dplyr)
library(ggplot2)
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate, y = dailyActivity$Id)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme_minimal()
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate, y = dailyActivity$Id), stat="identity") +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme_minimal()
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
View(step_counts_by_date)
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate, y = dailyActivity$Id), stat="identity") +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme_minimal()
library(dplyr)
library(ggplot2)
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme_minimal()
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme_minimal()
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps < 0)
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users with More Than 0 Steps Each Day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 45))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 60))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
View(step_counts_by_date)
avg_users_per_day <- sum(step_counts_by_date, num_users)/31
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date, step_counts_by_date$num_users)/31
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)
# Find what % of the time people were wearing their Fitbits overall
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
avg_users_per_day <- sum(step_counts_by_date$num_users)/31
overall_percent <- (average_users_per_day/31)*100
source("G:/My Drive/Google Data Analytics Professional Certificate/8  Capstone  Complete a Case Study/Rstudio Capstone Analysis/analyzingAndVisualizing.R", echo=TRUE)
overall_percent <- (avg_users_per_day/31)*100
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
geom_text(aes(label = num_users), vjust = -0.5, color = "white", size = 4) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
geom_text(aes(y=num_users, label = num_users), vjust = -0.5, color = "white", size = 4) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
geom_text(aes(label = "jhlakfhkalsdfhjh"), vjust = -0.5, color = "white", size = 4) +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate("fhakljshdfhabskfjh", 50, 50, label="label") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate("fhakljshdfhabskfjh", 50, 50, label="label") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate("text", 50, 50, label="label") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate("text", 1, 1, label="label") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate("text", 10, 10, label="label") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 10, 10, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 15, 15, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
library(dplyr)
library(ggplot2)
# 31 total days, 33 users
# Filter out rows with step_counts greater than 0
filtered_data <- dailyActivity %>%
filter(TotalSteps > 0)
# Group data by date and count the number of unique users
step_counts_by_date <- filtered_data %>%
group_by(ActivityDate) %>%
summarise(num_users = n_distinct(Id))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
View(sleepDay)
View(weightLogInfo)
count(weightLogInfo$IsManualReport == "TRUE")
# Find the proportion of weight logs that are done manually
summarise(weightLogInfo, num_unique = n_distinct(column_name))
# Find the proportion of weight logs that are done manually
summarise(weightLogInfo, num_unique = n_distinct(IsManualReport))
# Find the proportion of weight logs that are done manually
num_manual_weighs <- sum(weightLogInfo$IsManualReport == TRUE, na.rm = TRUE)
percent_manual_weighs <- (num_manual_weighs/67)*100
# Remove duplicate entries
dailyActivity <- distinct(dailyActivity)
sleepDay <- distinct(sleepDay)
weightLogInfo <- distinct(weightLogInfo)
# Converting IDs to strings
dailyActivity$Id <- as.character(dailyActivity$Id)
sleepDay$Id <- as.character(sleepDay$Id)
weightLogInfo$Id <- as.character(weightLogInfo$Id)
# Removing "12:00:00 AM" timestamp from SleepDay column
sleepDay$SleepDay <- substr(sleepDay$SleepDay, start=1, stop=9)
View(sleepDay)
View(dailyActivity)
# Find how many users out of 33 recorded their sleep at least once
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
# Find how many users out of 33 recorded their sleep at least once
n_distinct(sleepDay, Id)
# Find how many users out of 33 recorded their sleep at least once
n_distinct(sleepDay, sleepDay$Id)
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
help(summarise)
num_sleep_users <- sleepDay %>%
summarise(num_unique = n_distinct(Id))
print(num_sleep_users)
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(ID) %>%
summarise(total_sleep_records = sum(number_of_sleep_records))
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(number_of_sleep_records))
# Find how many total sleep records were recorded by each user
total_sleep_records_per_id <- sleepDay %>%
group_by(Id) %>%
summarise(total_sleep_records = sum(TotalSleepRecords))
print(total_sleep_records_per_id)
head(total_sleep_records_per_id)
View(total_sleep_records_per_id)
View(total_sleep_records_per_id)
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x = Id)) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "red", alpha = 0.7) +
# annotate(geom="label", 12, 12, label="On average, 89.8% of users
#          wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "red", alpha = 0.7) +
# annotate(geom="label", 12, 12, label="On average, 89.8% of users
#          wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = ActivityDate)) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = reorder(ActivityDate, num_users))) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
# annotate(geom="label", 12, 12, label="On average, 89.8% of users
#          wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(step_counts_by_date, aes(x = reorder(ActivityDate, num_users))) +
geom_bar(mapping=aes(y=num_users), stat = "identity", fill = "blue", alpha = 0.7) +
annotate(geom="label", 12, 12, label="On average, 89.8% of users
wore their Fitbits on any given day.", fill="white") +
labs(title = "Number of Users who wore their Fitbit on each day",
x = "Date",
y = "Number of Users") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 12, 12, label="Only 15/33 users recorded more than
10 sleep sessions", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Create the bar plot
ggplot(total_sleep_records_per_id, aes(x=reorder(Id, total_sleep_records))) +
geom_bar(mapping=aes(y=total_sleep_records), stat = "identity", fill = "purple", alpha = 0.7) +
annotate(geom="label", 18, 12, label="Only 15/33 users recorded more than
10 sleep sessions.", fill="white") +
labs(title = "Number of sleep records for each user",
x = "User ID",
y = "Number of Sleep Records") +
theme(axis.text.x = element_text(angle = 90))
# Remove duplicate entries
dailyActivity <- distinct(dailyActivity)
sleepDay <- distinct(sleepDay)
weightLogInfo <- distinct(weightLogInfo)
# Converting IDs to strings
dailyActivity$Id <- as.character(dailyActivity$Id)
sleepDay$Id <- as.character(sleepDay$Id)
weightLogInfo$Id <- as.character(weightLogInfo$Id)
# Removing "12:00:00 AM" timestamp from SleepDay column
sleepDay$SleepDay <- substr(sleepDay$SleepDay, start=1, stop=9)
View(sleepDay)
# Find how many total weigh-ins were done by each user
weigh_id_counts <- table(df$ID)
